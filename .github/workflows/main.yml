name: Automatic Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Determine new version
      id: version
      run: |
        LAST_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
        NEW_VERSION=$(echo $LAST_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Update version in YAML
      run: |
        sed -i "s/version:.*/version: ${{ env.NEW_VERSION }}/" modinfo.yaml
        git add modinfo.yaml
        git commit -m "Update version to ${{ env.NEW_VERSION }}"
        git push

    - name: Create Tag
      run: |
        git tag ${{ env.NEW_VERSION }}
        git push origin ${{ env.NEW_VERSION }}

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NEW_VERSION }}
        release_name: Release ${{ env.NEW_VERSION }}
        draft: false
        prerelease: false
    - name: Zip repository
      run: |
        zip -r custom-name-${{ github.ref }}.zip .
    
    - name: Upload ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./custom-name-${{ github.ref }}.zip
        asset_name: custom-name-${{ github.ref }}.zip
        asset_content_type: application/zip
