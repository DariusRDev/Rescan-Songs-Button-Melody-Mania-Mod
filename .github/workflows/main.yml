name: Automatic Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

   

    - name: Determine new version
      id: version
      run: |
        # Holen des neuesten Tags, das einem Semver-Muster entspricht
        LAST_VERSION=$(git tag -l --sort=-v:refname 'v*' | head -n 1 | sed 's/^v//')
        if [ -z "$LAST_VERSION" ]; then
          LAST_VERSION="0.0.0"
        fi
        echo "Letzte Version: $LAST_VERSION"
        # Inkrementieren der Patch-Version
        NEW_VERSION=$(echo $LAST_VERSION | awk -F. -v OFS=. '{$NF += 1; print}')
        echo "Neue Version: $NEW_VERSION"
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: ${{ env.NEW_VERSION }}

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NEW_VERSION }}
        release_name: Release ${{ env.NEW_VERSION }}
        draft: false
        prerelease: false
    - name: Zip repository
      run: |
        zip -r custom-name-${{ github.ref }}.zip .
    
    - name: Upload ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./custom-name-${{ github.ref }}.zip
        asset_name: custom-name-${{ github.ref }}.zip
        asset_content_type: application/zip
